"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
var Enum_1 = require("./Enum");
var enumSourceTypeTargetType;
(function (enumSourceTypeTargetType) {
    enumSourceTypeTargetType[enumSourceTypeTargetType["Url"] = 0] = "Url";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Path"] = 1] = "Path";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Node"] = 2] = "Node";
    enumSourceTypeTargetType[enumSourceTypeTargetType["CommunityPost"] = 3] = "CommunityPost";
    enumSourceTypeTargetType[enumSourceTypeTargetType["CommunityTag"] = 4] = "CommunityTag";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Product"] = 5] = "Product";
    enumSourceTypeTargetType[enumSourceTypeTargetType["ProductPureMarketPlace"] = 6] = "ProductPureMarketPlace";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Brand"] = 7] = "Brand";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Format"] = 8] = "Format";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Work"] = 9] = "Work";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Artist"] = 10] = "Artist";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Series"] = 11] = "Series";
    enumSourceTypeTargetType[enumSourceTypeTargetType["CommunityContributor"] = 12] = "CommunityContributor";
    enumSourceTypeTargetType[enumSourceTypeTargetType["Store"] = 13] = "Store";
    enumSourceTypeTargetType[enumSourceTypeTargetType["CommunitySecondaryHome"] = 14] = "CommunitySecondaryHome";
})(enumSourceTypeTargetType = exports.enumSourceTypeTargetType || (exports.enumSourceTypeTargetType = {}));
var EnumSourceType = /** @class */ (function (_super) {
    __extends(EnumSourceType, _super);
    function EnumSourceType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EnumSourceType.prototype.GetArray = function () {
        return _super.prototype.SortByNameAndConvertToArray.call(this, enumSourceTypeTargetType, true, [10]);
    };
    return EnumSourceType;
}(Enum_1.Enum));
exports.EnumSourceType = EnumSourceType;
var EnumTargetType = /** @class */ (function (_super) {
    __extends(EnumTargetType, _super);
    function EnumTargetType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EnumTargetType.prototype.GetArray = function () {
        return _super.prototype.SortByNameAndConvertToArray.call(this, enumSourceTypeTargetType, true, [10]);
    };
    return EnumTargetType;
}(Enum_1.Enum));
exports.EnumTargetType = EnumTargetType;
// export function SourceTypes() {
//     let map: { id: string; name: string }[] = [];
//     for (var n in EnumSourceTypeTargetType) {
//         if (typeof EnumSourceTypeTargetType[n] === 'number') {
//             map.push({ id: <any>EnumSourceTypeTargetType[n], name: n });
//         }
//     }
//     const sorted = map.sort((t1, t2) => {      
//         if (t1.name > t2.name) { return 1; }
//         if (t1.name < t2.name) { return -1; }
//         return 0;
//       });
//     console.log("map map ", sorted);
//     return sorted;
// }
// export const SourceTypes2 = () => {
//     var obj: { [key: number]: any, [value: string]: any } = {};
//     let map: any;
//     for (var n in EnumSourceTypeTargetType) {
//         if (typeof EnumSourceTypeTargetType[n] === 'number') {
//             console.log("***", n);
//             console.log("**EnumSourceTypeTargetType *", EnumSourceTypeTargetType[n]);
//             obj[n] = EnumSourceTypeTargetType[n];
//         }
//     }
//     console.log("obj obj ", obj)
//     return obj;
// }
